// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String     @unique
  password String
  role     String
  clients  Client[]
  exercise Exercise[]
}

model Exercise {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              String              @unique
  muscleGroups      String[]
  demoLink          String
  created           DateTime            @default(now())
  modified          DateTime            @updatedAt
  scheduledExercise ScheduledExercise[]
  User              User                @relation(fields: [userId], references: [id])
  userId            String              @db.ObjectId
}

model Client {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  surname  String
  email    String    @unique
  status   String
  created  DateTime  @default(now())
  modified DateTime  @updatedAt
  schedule Schedule?
  User     User      @relation(fields: [userId], references: [id])
  userId   String    @db.ObjectId
}

model ScheduledExercise {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  exercise       Exercise?     @relation(fields: [exerciseId], references: [id])
  sets           String
  reps           String
  rpe            String
  comment        String
  created        DateTime?     @default(now())
  modified       DateTime?     @updatedAt
  exerciseId     String        @db.ObjectId
  scheduledDay   ScheduledDay? @relation(fields: [scheduledDayId], references: [id], onDelete: Cascade)
  scheduledDayId String        @db.ObjectId
  ordinalNum     Int
}

model ScheduledDay {
  id         String              @id @default(auto()) @map("_id") @db.ObjectId
  exercises  ScheduledExercise[]
  created    DateTime?           @default(now())
  modified   DateTime?           @updatedAt
  schedule   Schedule            @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  scheduleId String              @db.ObjectId
  ordinalNum Int
}

model Schedule {
  id       String         @id @default(auto()) @map("_id") @db.ObjectId
  client   Client         @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId String         @unique @db.ObjectId
  created  DateTime       @default(now())
  modified DateTime       @updatedAt
  days     ScheduledDay[]
}
